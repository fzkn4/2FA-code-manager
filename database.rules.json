{
  "rules": {
    "users": {
      "$uid": {
        ".read": "$uid === auth.uid",
        ".write": "$uid === auth.uid",
        ".validate": "newData.hasChildren(['uid', 'encryptedData', 'createdAt', 'updatedAt'])"
      }
    },
    "codes": {
      ".read": "auth != null",
      ".write": "auth != null",
      ".indexOn": "userId",
      "$codeId": {
        ".read": "auth != null && (data.child('userId').val() === auth.uid || !data.exists())",
        ".write": "auth != null && (data.child('userId').val() === auth.uid || (!data.exists() && newData.child('userId').val() === auth.uid))",
        ".validate": "newData.hasChildren(['id', 'userId', 'encryptedData', 'isUsed', 'createdAt', 'updatedAt']) && newData.child('userId').val() === auth.uid"
      }
    },
    "$other": {
      ".read": false,
      ".write": false
    }
  }
}
